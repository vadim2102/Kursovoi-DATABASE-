СОЗДАНИЕ ТАБЛИЦ

// My first change

CREATE  TABLE acc_inf (
    id_a           NUMBER NOT NULL,
    balance      NUMBER,
    b_number     NUMBER,
    s_r_d_c      NUMBER,
    chek_id_c      NUMBER NOT NULL,
    customer_id_s  NUMBER NOT NULL
);

ALTER TABLE acc_inf ADD CONSTRAINT acc_inf_pk PRIMARY KEY ( id_a );

CREATE TABLE  chek (
    id_c          NUMBER NOT NULL,
    numb_cheka  NUMBER,
    suma        NUMBER,
    Dataa      DATE,
    operat_id_o   NUMBER NOT NULL
);

ALTER TABLE chek ADD CONSTRAINT chek_pk PRIMARY KEY ( id_c );

CREATE  TABLE customer (
    id_s           NUMBER NOT NULL,
    first_name   NVARCHAR2(50),
    second_name  NVARCHAR2(50)
);

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( id_s );

CREATE  TABLE operat (
    id_o         NUMBER NOT NULL,
    type_oper  NVARCHAR2(50)
);

ALTER TABLE operat ADD CONSTRAINT operat_pk PRIMARY KEY ( id_o );

ALTER TABLE acc_inf
    ADD CONSTRAINT acc_inf_chek_fk FOREIGN KEY ( chek_id_c )
        REFERENCES chek ( id_c );

ALTER TABLE acc_inf
    ADD CONSTRAINT acc_inf_customer_fk FOREIGN KEY ( customer_id_s )
        REFERENCES customer ( id_s );

ALTER TABLE chek
    ADD CONSTRAINT chek_operat_fk FOREIGN KEY ( operat_id_o )
        REFERENCES operat ( id_o );

СОЗДАНИЕ ПОСЛЕДОВАТЕЛЬНОСТЕЙ

drop sequence Acc_i ;
drop sequence Chek_s ;
drop sequence Custom ;
drop sequence Opera ;
Commit;

create  sequence ACC_I
minvalue 1
maxvalue 999
start with 1
increment by 1
cache 20;


create  sequence CHEK_S
minvalue 1
maxvalue 999
start with 1
increment by 1
cache 20;


create  sequence CUSTOM
minvalue 1
maxvalue 999
start with 1
increment by 1
cache 20;

create  sequence OPERA
minvalue 1
maxvalue 999
start with 1
increment by 1
cache 20;


СОЗДАНИЕ ТРИГГЕРОВ

create or replace trigger ACC_I
  before insert on ACC_INF
  for each row
  declare
begin
  select ACC_I.NEXTVAL INTO :new.ID_a FROM dual;
end  ACC_I ;


create or replace trigger Chek_Id
  before insert on Chek
  for each row
  declare
begin
  select Chek_S.NEXTVAL INTO :new.ID_c FROM dual;
end  Chek_ID ;


create or replace trigger Custom_Id
  before insert on Customer
  for each row
  declare
begin
  select Custom.NEXTVAL INTO :new.ID_s FROM dual;
end  Custom_Id ;

CREATE OR REPLACE TRIGGER Kursovoi_view
  INSTEAD OF INSERT ON Kursovoi
BEGIN
  INSERT INTO Acc_inf
          (Balance,b_number,s_r_d_c)
        VALUES
          ( :new.Balance, :new.b_number, :new.s_r_d_c);
  INSERT INTO Customer
          (ID_S,First_name,second_name)
        VALUES
          (Custom.Currval , :new.First_name, :new.Second_name);
  INSERT INTO Chek
          (Suma,Dataa,Numb_cheka)
        VALUES
          (  :new.Suma, :new.Dataa, :new.Numb_cheka);
       INSERT INTO Operat
          (Type_oper)
        VALUES
          ( :new.type_oper);
END Kursovoi_view;

create or replace trigger Opera_ID
  before insert on Operat
  for each row
  declare
begin
  select Opera.NEXTVAL INTO :new.ID_o FROM dual;
end Opera_ID ;

СОЗДАНИЕ ПРЕДСТАВЛЕНИЯ

create or replace view kursovoi as
select ID_s,First_name, Second_name,B_number,balance,s_r_d_c,Numb_cheka,Type_oper,SUma,dataa
From ACC_INF,Customer,Chek,Operat;
FORMA 1



C# код для доп. приложения к базе данных 
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Configuration;
using Oracle.DataAccess;

namespace курсово
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            Oracle.DataAccess.Client.OracleConnectionStringBuilder bil = new Oracle.DataAccess.Client.OracleConnectionStringBuilder();

            bil.UserID = textBox1.Text;

            bil.Password = textBox2.Text;

            bil.DataSource = textBox3.Text;

            bil.PersistSecurityInfo = true;



            Oracle.DataAccess.Client.OracleConnection con = new Oracle.DataAccess.Client.OracleConnection();



            con.ConnectionString = bil.ConnectionString;



            try
            {

                con.Open();

                Properties.Settings.Default["connectionString"] = bil.ConnectionString;







                Form2 f = new Form2();

                f.Show();

            }

            catch
            {

                MessageBox.Show("неправильный пароль");

            }
        }
    }
}


FORMA 2

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using Oracle.DataAccess.Client;
using Oracle;
namespace курсово
{
    public partial class Form2 : Form
    {
        OracleConnection con = new OracleConnection();
        OracleDataAdapter adap;
        DataSet ds;
        OracleCommandBuilder cmdbl;

        public Form2()
        {
            InitializeComponent();
        }

        private void Form2_Load(object sender, EventArgs e)
        {
            // TODO: данная строка кода позволяет загрузить данные в таблицу "dataSet1.OPERAT". При необходимости она может быть перемещена или удалена.
            this.oPERATTableAdapter.Fill(this.dataSet1.OPERAT);
            // TODO: данная строка кода позволяет загрузить данные в таблицу "dataSet1.CUSTOMER". При необходимости она может быть перемещена или удалена.
            this.cUSTOMERTableAdapter.Fill(this.dataSet1.CUSTOMER);
            // TODO: данная строка кода позволяет загрузить данные в таблицу "dataSet1.CHEK". При необходимости она может быть перемещена или удалена.
            this.cHEKTableAdapter.Fill(this.dataSet1.CHEK);
            // TODO: данная строка кода позволяет загрузить данные в таблицу "dataSet1.ACC_INF". При необходимости она может быть перемещена или удалена.
            this.aCC_INFTableAdapter.Fill(this.dataSet1.ACC_INF);
            // TODO: данная строка кода позволяет загрузить данные в таблицу "dataSet1.KURSOVOI". При необходимости она может быть перемещена или удалена.

            // TODO: данная строка кода позволяет загрузить данные в таблицу "dataSet1.KURSOVOI". При необходимости она может быть перемещена или удалена.
            // this.kURSOVOITableAdapter.Fill(this.dataSet1.KURSOVOI);



            //this.reportViewer1.RefreshReport();
        }
        private void kURSOVOIDataGridView_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }
        private void button1_Click(object sender, EventArgs e)
        {
            this.kURSOVOITableAdapter.Fill(this.dataSet1.KURSOVOI);
            reportViewer1.RefreshReport();
        }

        private void button2_Click(object sender, EventArgs e)
        {
            OracleConnectionStringBuilder bil = new OracleConnectionStringBuilder();

            bil.UserID = "Vadik";
            bil.Password = "5224";
            bil.PersistSecurityInfo = true;
            con.ConnectionString = bil.ConnectionString;

            try
            {
                con.Open();

                adap = new OracleDataAdapter("select * from Kursovoi order by id_s", con);
                ds = new System.Data.DataSet();
                adap.Fill(ds, "CourseDB");
                dataGridView1.DataSource = ds.Tables[0];
            }
            catch { }

        }

        private void button3_Click(object sender, EventArgs e)
        {
            

            try
            {
                cmdbl = new OracleCommandBuilder(adap);
                adap.Update(ds, "CourseDB");
                MessageBox.Show("Records have been added!");

                this.kURSOVOITableAdapter.UpdateQuery();

            }

            catch
            {

                MessageBox.Show("ne polychilos`");
            }

        }
        private void Custom()
        {
            textBox4.Visible = true;
            textBox5.Visible = true;
            textBox6.Visible = true;
            textBox1.Visible = true;
            textBox2.Visible = true;
            textBox3.Visible = true;
            label1.Text = "ID";
            label2.Text = "имя";
            label3.Text = "фамилия";
            label4.Text = "Данные";
            label5.Text = "Данные";
            label6.Text = "Данные";
        }
        private void button4_Click(object sender, EventArgs e)
        {
            try
            {
                this.cUSTOMERTableAdapter.Update(this.dataSet1.CUSTOMER);
            }
            catch
            {
                Custom();
            }

        }

        private void button5_Click(object sender, EventArgs e)
        {
            try
            {
                this.cUSTOMERTableAdapter.Insert((decimal)Convert.ToDouble(textBox1.Text), (string)(textBox2.Text), (string)(textBox3.Text));
                button6_Click(sender, e);
            }
            catch
            {
                MessageBox.Show("BAD");
                button6_Click(sender, e);
                Custom();
            }
        }

        private void button6_Click(object sender, EventArgs e)
        {
            this.cUSTOMERTableAdapter.Fill(this.dataSet1.CUSTOMER);
            this.cHEKTableAdapter.Fill(this.dataSet1.CHEK);
            this.oPERATTableAdapter.Fill(this.dataSet1.OPERAT);
            this.aCC_INFTableAdapter.Fill(this.dataSet1.ACC_INF);
        }

        private void button7_Click(object sender, EventArgs e)
        {
            try
            {
                this.cHEKTableAdapter.Update(this.dataSet1.CHEK);
            }
            catch
            {
                Custom();
            }
        }

        private void button9_Click(object sender, EventArgs e)
        {
            try
            {
                this.oPERATTableAdapter.Update(this.dataSet1.OPERAT);
            }
            catch
            {
                Custom();
            }
        }

        private void button11_Click(object sender, EventArgs e)
        {
            try
            {
                this.aCC_INFTableAdapter.Update(this.dataSet1.ACC_INF);
            }
            catch
            {
                Custom();
            }
        }

        private void button8_Click(object sender, EventArgs e)
        {

            try
            {
                this.cHEKTableAdapter.Insert((decimal)Convert.ToDouble(textBox1.Text), (decimal)Convert.ToDouble(textBox2.Text), (decimal)Convert.ToDouble(textBox3.Text), (DateTime)Convert.ToDateTime(textBox4.Text), (decimal)Convert.ToDouble(textBox5.Text));
                button6_Click(sender, e);
            }
            catch
            {
                MessageBox.Show("BAD");
                button6_Click(sender, e);
                Custom();
            }
        }

        private void button10_Click(object sender, EventArgs e)
        {{

            try
            {
                this.oPERATTableAdapter.Insert((decimal)Convert.ToDouble(textBox1.Text),(string)(textBox2.Text));
            }
            catch
            {
                MessageBox.Show("BAD");
                button6_Click(sender, e);
                Custom();
            }
            
        }
    }

        private void button12_Click(object sender, EventArgs e)
        {
            {

                try
                {
                    this.aCC_INFTableAdapter.Insert((decimal)Convert.ToDouble(textBox1.Text), (decimal)Convert.ToDouble(textBox2.Text), (decimal)Convert.ToDouble(textBox3.Text), (decimal)Convert.ToDouble(textBox4.Text), (decimal)Convert.ToDouble(textBox5.Text), (decimal)Convert.ToDouble(textBox6.Text));
                    button6_Click(sender, e);
                }
                catch
                {
                    MessageBox.Show("BAD");
                    button6_Click(sender, e);
                    Custom();
                }
            }
        }
    }
}
